7
db.customers.insertMany([ {first_name: "Steven", last_name:"Williams", gender:"male"}, {first_name: "Mary", last_name:"Troy", age:19}   ])

8
db.customers.insertOne( {first_name: "Ric", last_name:"Foe", address:{street:"4 main st", city: "Boston"} } )

9
db.customers.insertOne( {first_name: "Ana", last_name:"Durante",gratudation: ["phD","Msc"], address:{street:"4 Square Garden", city: "New York"}, age:32 } )


10
db.customers.insertOne( {first_name: "Natalia", last_name:"Will",age:44,gender:"female"} )

11
db.customers.find()

12
db.customers.find().pretty() 

13
db.customers.update({ first_name:"Ric"}, {$set: {age:45}})  

14
db.customers.find({last_name: {$regex : ".*Will.*"}})  

15
db.customers.update({ first_name:"Steven"}, {$set: {age:35}})  

16
db.customers.update( {first_name:"Ana", age:{$gt: 30}}, {$inc: {age:10}} )

17
db.customers.update( {first_name:"Ric"}, {$unset: {age:"" }} ) 

18
db.customers.find( {first_name: "Jimy"}, {first_name: "Jimmy", last_name: "Connors", age: 25, gender: "male"}, {upsert: true})

19
db.customers.find( {age:{$gte: 25}}) 

20
db.customers.find( {gender:{$eq: "male"}})

21
db.customers.remove( {first_name: "Mary"})

22
db.customers.find( {first_name: {$in:["Ana", "Ric"]} }) 


-------------------------2-------------------------
1
{}

2
FILTER {}
PROJECT {restaurant_id :1 , name:1 , borough:1, cuisine:1}

3
FILTER {}
PROJECT {restaurant_id :1 , name:1 , borough:1, cuisine:1, _id:0}

4
FILTER {}
PROJECT {restaurant_id :1 , name:1 , borough:1, "address.zipcode":1, _id:0}

5
FILTER { borough:"Bronx"}

6
FILTER { borough:"Bronx"}
LIMIT 5

7
FILTER { borough:"Bronx"}
LIMIT 5
SKIP 5

8
FILTER {"grades.score": {$gte :90 }}

9
FILTER { "grades": {$elemMatch: {"score": {$gt :80 ,  $lte: 100} }}}

10
FILTER { "address.coord.0": {$lt :-95.754168 } }

11
FILTER {$and: [{ cuisine: {$nin : ["American "]}} ,{"grades": {$elemMatch: {"score": {$gt :70}} }}, {"address.coord.0": -65.754168.}]}

12
FILTER { cuisine: {$nin : ["American "]} ,"grades": {$elemMatch: {"score": {$gt :70}} }, "address.coord.0": {$lt: -65.754168} }

13
FILTER { cuisine: {$nin : ["American "]}, "grades.grade": {$in: ["A"]} , borough: {$nin: ["Brookly"]} }
SORT {cuisine : 1} //-1 para trocar a ordem

14
FILTER { borough: "Bronx" , cuisine: {$in : ["American ","Chinese"] }}

15
FILTER {"address.coord":{$type :1}}
--OU
FILTER {$or: [{"address.coord.0":{$type :1}} , {"address.coord.1":{$type :1}} ] }

16
FIELD {"address.street" : {$exists: true}}

17
SORT {cuisine : -1, borough : 1}

18
FILTER { "address.coord.1" : {$gt : 42, $lte : 52}  }
PROJECT {restaurant_id:1, name:1, address:1}

----- {"address": {$elemMatch: {"coord.1": {$gt : 42, $lte : 52}}}}

19
FILTER { "grades": {$elemMatch: {"score": {$lt : 10}}} }
PROJECT {restaurant_id:1, name:1, borough:1, cuisine:1}

20
FILTER { borough: {$nin: ["Staten Island", "Queens", "Bronx", "Brooklin" ] } }
PROJECT {restaurant_id:1, name:1, borough:1, cuisine:1}















